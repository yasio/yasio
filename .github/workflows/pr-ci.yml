name: pull_request

on: [pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PING_HOST: github.com

jobs:
  win32:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - x86
          - x64
    env:
      BUILD_ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ilammy/msvc-dev-cmd@v1
        with: 
          arch: ${{ env.BUILD_ARCH }}
      - name: Build
        run: .\tools\ci.ps1 -p win32 -a $env:BUILD_ARCH
  winuwp:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - x64
          - arm64
    env:
      BUILD_ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - uses: ilammy/msvc-dev-cmd@v1
      with: 
        arch: ${{ env.BUILD_ARCH }}
        uwp: 'true'
    - name: Build
      run: .\tools\ci.ps1 -p winuwp -a $env:BUILD_ARCH
  win32-mingw:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: msys2/setup-msys2@v2
        with: 
          msystem: mingw64
          install: mingw-w64-x86_64-toolchain
      - name: Build
        run: .\tools\ci.ps1 -p win32 -cc 'gcc'
  linux:
    runs-on: ubuntu-latest
    env:
      BUILD_TARGET: linux
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build
        shell: pwsh
        run: ./tools/ci.ps1
  android:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - armv7
          - arm64
          - x86
          - x64
    env:
      BUILD_ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build
        shell: pwsh
        run: ./tools/ci.ps1 -p android -a $env:BUILD_ARCH
  osx:
    runs-on: macos-latest
    env:
      BUILD_TARGET: osx
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build
        shell: pwsh
        run: ./tools/ci.ps1
  ios:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - ios
          - tvos
          - watchos
    env:
      BUILD_TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build
        shell: pwsh
        run: ./tools/ci.ps1 -p $env:BUILD_TARGET -a arm64
  freebsd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build
        uses: vmactions/freebsd-vm@main
        with:
          usesh: true
          prepare: |
            pkg install -y git
            pkg install -y cmake
            pkg install -y python3
            # required by mbedtls-3.3.0
            pkg install -y py39-pip
            pip install jsonschema jinja2
            # install perl5, localtion: /usr/local/bin
            pkg search perl5
            pkg search perl5 | cut -d' ' -f1 | head -n 1 | xargs pkg install -y
            perl -v
          run: |
            echo Building on freebsd...
            cmake -G "Unix Makefiles" -S . -Bbuild -DYASIO_SSL_BACKEND=2
            cmake --build build
            echo run test icmp on freebsd...
            ./build/tests/icmp/icmptest
